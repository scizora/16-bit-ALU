module boolean (
    input alufn[6],               //defining inputs and outputs of module
    input a[16],
    input b[16],
    output booleanx[16]
  ) {
  
  var x;
  var i;
  
  always {
    for(i=0; i<16; i++){          //loop through all the bits in a and b starting from least significant bit
      x = c{b[i], a[i]};          //connect bits a[i] and b[i] such that s = ba, where s is a 2 bit number
      case(x){
        b00:                      //if a[i] = 0 and b[i] = 0, ith bit of bool = alufn[0]
          booleanx[i] = alufn[0];
        b01:                      //if a[i] = 1 and b[i] = 0, ith bit of bool = alufn[1]
          booleanx[i] = alufn[1];
        b10:                      //if a[i] = 0 and b[i] = 1, ith bit of bool = alufn[2]
          booleanx[i] = alufn[2];
        b11:                      //if a[i] = 1 and b[i] = 1, ith bit of bool = alufn[3]
          booleanx[i] = alufn[3];
        default:
          booleanx[i] = alufn[0];
      }
    }
    
  }
}
